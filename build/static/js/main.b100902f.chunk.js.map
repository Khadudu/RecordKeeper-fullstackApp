{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","date","onClick","Notification","message","getAll","axios","get","then","responce","data","create","newObject","post","update","id","put","App","props","event","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","seterrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","style","color","map","i","key","find","changedNote","returnedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","preventDefault","noteObject","Date","toISOString","Math","random","concat","value","onChange","target","placeholder","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEe,SAASA,EAAT,GAA2C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,iBAC/BC,EAAQF,EAAKG,UAAU,qBAAsB,iBACjD,OACE,4BACE,wBAAIC,UAAW,QACZJ,EAAKK,QADR,KACmBL,EAAKM,KAAM,IAC5B,4BAAQC,QAASN,GAAmBC,KCK7BM,MAXf,YAAiC,IAAVC,EAAS,EAATA,QACnB,OAAc,OAAVA,EACK,KAGP,yBAAKL,UAAU,SACZK,I,gBCYK,OAACC,OAjBf,WAEA,OADgBC,IAAMC,IAHN,aAIDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAejBC,OAZtB,SAAgBC,GAEhB,OADgBN,IAAMO,KARN,YAQoBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAUVI,OAN7B,SAAgBC,EAAIH,GAEpB,OADgBN,IAAMU,IAAN,UAdA,YAcA,YAAwBD,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UCiFxBO,MA3Ff,SAAaC,EAAOC,GAAQ,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,OAEKF,mBAAS,IAFd,mBAElBG,EAFkB,KAETC,EAFS,OAGKJ,oBAAS,GAHd,mBAGlBK,EAHkB,KAGTC,EAHS,OAIeN,mBAAS,MAJxB,mBAIlBO,EAJkB,KAIJC,EAJI,KAMzBC,qBAAU,WACRC,EACGzB,SACAG,MAAK,SAAAuB,GACJT,EAASS,QAEZ,IA0CH,IAAMC,EAAcP,EAClBJ,EACAA,EAAMY,QAAO,SAACtC,GAAD,OAA6B,IAAnBA,EAAKG,aAK9B,OACE,6BACE,wBAAIoC,MALM,CACZC,MAAM,QAIJ,UACA,kBAAC,EAAD,CAAc/B,QAASuB,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYI,KAAI,SAACzC,EAAM0C,GACtB,OAAO,kBAAC3C,EAAD,CACP4C,IAAKD,EACL1C,KAAMA,EACNC,iBAAkB,kBA1C5B,SAA6BmB,GAC3B,IACQpB,EAAO0B,EAAMkB,MAAK,SAAA5C,GAAI,OAAEA,EAAKoB,KAAKA,KAClCyB,EAAY,2BAAI7C,GAAL,IAAWG,WAAYH,EAAKG,YAE7CgC,EACChB,OAAOC,EAAIyB,GACXhC,MAAK,SAAAiC,GACJnB,EAASD,EAAMe,KAAI,SAAAzC,GAAI,OAAEA,EAAKoB,KAAMA,EAAGpB,EAAK8C,SAE7CC,OAAM,SAAAC,GACLf,EAAgB,SAAD,OACJjC,EAAKK,QADD,0CAGf4C,YAAW,WACThB,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAY,GAAC,OAAEA,EAAE9B,KAAOA,SAyBR+B,CAAmBnD,EAAKoB,WAIlD,0BAAMgC,SAjEV,SAAiB5B,GACfA,EAAM6B,iBACN,IAAMC,EAAa,CACjBjD,QAASuB,EACTtB,MAAM,IAAIiD,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAE7BvB,EACCnB,OAAOsC,GACPzC,MAAK,SAAAiC,GACJnB,EAASD,EAAMiC,OAAOb,IACtBjB,EAAW,UAuDT,2BACE+B,MAAOhC,EACPiC,SAtDR,SAA2BrC,GACzBK,EAAWL,EAAMsC,OAAOF,QAsDlBG,YAAY,aAEd,4BAAQC,KAAK,UAAb,WCtFNC,IAASC,OACT,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b100902f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Note({ note, toggleImportance }) {\nconst label = note.important?\"make not important\": \"make important\"\n  return (\n    <ul>\n      <li className={\"note\"}>\n        {note.content}: {note.date}{\" \"}\n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    </ul>\n  );\n}\n","import React from 'react'\n\nfunction Notification({message}){\n    if (message===null) {\n      return null\n    }\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification\n","import axios from \"axios\"\nconst baseUrl = \"api/notes\"\n\nfunction getAll(){\nconst request = axios.get(baseUrl)\nreturn request.then(responce=>responce.data)\n}\n\nfunction create(newObject){\nconst request = axios.post(baseUrl, newObject)\nreturn request.then(responce=>responce.data)\n}\n\n\nfunction update(id, newObject){\nconst request = axios.put(`${baseUrl}/${id}`, newObject)\nreturn request.then(responce=>responce.data)\n}\n\n\nexport default{getAll,create,update}","import React, { useEffect, useState } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport noteService from \"./services/notes\";\n\n\nfunction App(props, event) {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, seterrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  function addNote(event) {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n    .create(noteObject)\n    .then(returnedNote=>{\n      setNotes(notes.concat(returnedNote))\n      setNewNote(\" \")\n    })\n  }\n  function handleChangeInput(event) {\n    setNewNote(event.target.value);\n  }\n\n\nfunction toggleImportanceOf (id){\n  const url = \"http://localhost:3001/notes/${id}\"\n    const note = notes.find(note=>note.id===id)\n    const changedNote={...note, important: !note.important}\n    \n    noteService\n    .update(id, changedNote)\n    .then(returnedNote=>{\n      setNotes(notes.map(note=>note.id !==id?note:returnedNote))\n    })\n    .catch(error=>{\n      seterrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(()=>{\n        seterrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n=>n.id !== id))\n    })\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter((note) => note.important === true);\n\n  const heade = {\n    color:\"red\"\n  }\n  return (\n    <div>\n      <h1 style={heade}>Notes:</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => {\n          return <Note \n          key={i} \n          note={note} \n          toggleImportance={()=>toggleImportanceOf(note.id)}\n          />;\n        })}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleChangeInput}\n          placeholder=\"add post\"\n        />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n//const promise2 = axios.get(\"http://localhost:3001/foobar\")\n//console.log(promise2);\n\n\n"],"sourceRoot":""}